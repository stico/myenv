# TODO: seems using '' for command not works, why?
# Restart CMD: killall -HUP xbindkeys

# NOTE: for path with space: "~/program/vim/bin/gvim --servername SINGLE_VIM --remote-tab ~/Documents/DCB/Google\ Drive/NOTE/A_A_NOTE_Record.txt"

"LD_LIBRARY_PATH='' /home/ouyangzhu/.zbox/ins/vim/vim-hg-ouyzhu/bin/gvim --servername SINGLE_VIM --remote-tab ~/Documents/DCB/Record/Note/A_NOTE_Copy.txt && /usr/bin/wmctrl -a 'SINGLE_VIM'"
  control+alt+c

"LD_LIBRARY_PATH='' /home/ouyangzhu/.zbox/ins/vim/vim-hg-ouyzhu/bin/gvim --servername SINGLE_VIM --remote-tab ~/Documents/DCB/Record/Note/A_NOTE_TmpRecord.txt && /usr/bin/wmctrl -a 'SINGLE_VIM'"
  control+alt+q

"LD_LIBRARY_PATH='' /home/ouyangzhu/.zbox/ins/vim/vim-hg-ouyzhu/bin/gvim --servername SINGLE_VIM --remote-tab ~/.myenv/zgen/collection/all_content.txt && /usr/bin/wmctrl -a 'SINGLE_VIM'"
  control+alt+a

#"/usr/bin/wmctrl -a 'SINGLE_VIM' || ( export PS1='to_cheat_bashrc' && source /home/ouyangzhu/.bashrc && LD_LIBRARY_PATH='' /home/ouyangzhu/.zbox/ins/vim/vim-hg-ouyzhu/bin/gvim --servername SINGLE_VIM --remote-tab ~/.myenv/zgen/collection/all_content.txt ) " 
"/usr/bin/wmctrl -a 'SINGLE_VIM' || /bin/bash -c ' export PS1=to_cheat_bashrc && source /home/ouyangzhu/.bashrc && LD_LIBRARY_PATH= /home/ouyangzhu/.zbox/ins/vim/vim-hg-ouyzhu/bin/gvim --servername SINGLE_VIM --remote-tab ~/.myenv/zgen/collection/all_content.txt ' " 
  control+alt+z

"/usr/bin/wmctrl -a 'Foxit'"
  control+alt+f

"/usr/bin/wmctrl -a 'IDEA' || /usr/bin/wmctrl -a 'Eclipse'"
  control+alt+i

"/usr/bin/wmctrl -a 'Eclipse' || /usr/bin/wmctrl -a 'IDEA'"
  control+alt+e

"/usr/bin/wmctrl -a 'Zeal' || /usr/bin/zeal"
  control+alt+r

"/usr/bin/wmctrl -a 'Okular' || /usr/bin/okular"
  control+alt+o

"/usr/bin/wmctrl -a 'Google Chrome' || /usr/bin/google-chrome"
  control+alt+d

"/usr/bin/wmctrl -a 'Mozilla Thunderbird' || /usr/bin/thunderbird"
  control+alt+m

#"/usr/bin/wmctrl -a 'Double Commander' || ~/program/doublecmd/doublecmd"
#  control+alt+f

"/usr/bin/wmctrl -a 'SINGLE_TERMINATOR' || /usr/bin/terminator --title SINGLE_TERMINATOR"
  control+alt+x

"/usr/bin/wmctrl -a 'Intellij IDEA' || /home/ouyangzhu//.zbox/ins/intellij/intellij-13.1/bin/idea.sh &> /dev/null &"
  control+alt+i

"/usr/bin/wmctrl -a 'workvmIII' || /usr/lib/virtualbox/VirtualBox --comment 'workvmIII' --startvm 'bd0a6b1d-1951-48f5-a406-2fe4ad19bb5a'"
  control+alt+w

"~/.myenv/conf/myahk/myahk_script_hotstring.sh"
  control+alt+h

# Version 1: Not works:			sh -c "copied=\"$(/usr/bin/xclip -o)\" && echo \"$copied\" >> ~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt && notify-send -t 1000 'Copy to File' \"$copied\" || notify-send -t 1000 -u critical 'Copy to File' 'Copy Failed, pls check'"
# Version 2: Works for multiple line:	sh -c "copied=$(echo '$(/usr/bin/xclip -o)') && /usr/bin/xclip -o >> ~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt && notify-send -t 1000 'Copy to File' \"$(echo '$(/usr/bin/xclip -o)')\" "
# Version 3: Works and simple		sh -c "/usr/bin/xclip -o >> ~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt && notify-send -t 1000 'Copied to A_A_NOTE_Copy.txt'"
# Problem: the notify-send can not show Body when copied multiple lines
# TODO: seems GNOME notifications is better than Ubuntu NotifyOSD notification
#"/usr/bin/xclip -o >> ~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt && notify-send -t 1000 'Copied to A_A_NOTE_Copy.txt' \"$(echo '$(/usr/bin/xclip -o)')\" "
#"target=~/Documents/DCB/Record/Note/A_NOTE_Copy.txt ; echo >> $target && txt=$(/usr/bin/xclip -o) && echo $txt >> $target && (echo 0 ; sleep 1 ; echo 100) | zenity --progress --auto-close --title=Copied --text=\"$txt\""
#'target=~/Documents/DCB/Record/Note/A_NOTE_Copy.txt ; echo >> $target && txt=$(/usr/bin/xclip -o) && echo $txt >> $target && (echo 0 ; sleep 1 ; echo 100) | zenity --progress --auto-close --title=Copied --text=\\'$txt\\''
#"target=~/Documents/DCB/Record/Note/A_NOTE_Copy.txt ; echo >> $target && txt=$(/usr/bin/xclip -o) && showtxt=$(echo $txt | sed -e s/tr//) && echo $txt && echo $showtxt && echo $txt >> $target && zenity --info && sleep 0.5 && /usr/bin/wmctrl -a 'Information'"						# copy works, notification dialog created BUT not show (seems attached to the terminal window)
#"target=~/Documents/DCB/Record/Note/A_NOTE_Copy.txt ; echo >> $target && txt=$(/usr/bin/xclip -o) && showtxt=$(echo $txt | sed -e s/tr//) && echo $txt && echo $showtxt && echo $txt >> $target && (echo 0 ; sleep 1 ; echo 100) | zenity --progress --auto-close --title=Copied --text=\"$showtxt\""		# copy works, notification NOT
"target=~/Documents/DCB/Record/Note/A_NOTE_Copy.txt ; echo >> $target && /usr/bin/xclip -o >> $target && notify-send -t 1000 'Copied to A_A_NOTE_Copy.txt'"	# works for a long time, just the notify-send timeout option not works
  control+shift+c

"zenity --info --text=MyahkScreenShotInvoked ; ~/.myenv/conf/myahk/myahk_script_screenshot.sh"
  control+shift+x

#"/usr/bin/xfce4-appfinder"		# for XFCE
"xdotool key --clearmodifiers Super"
  control+shift+z

# not work !
"xdotool key --clearmodifiers Ctrl+Super+Left"
  Control+Shift+Alt+Left

# not work !
"xdotool key --clearmodifiers Ctrl+Super+Right"
  Control+Shift+Alt+Right

"/usr/bin/wmctrl -c :ACTIVE:"
  control+shift+alt+x

"/usr/bin/wmctrl -c :ACTIVE: -b toggle,maximized_vert,maximized_horz"
  alt+z

"wmctrl -k on"
  control+shift+alt+d

# Ubuntu has its own solution
#"~/.myenv/conf/myahk/myahk_script_move_next_monitor.sh"
#  control+shift+alt+Next
#"~/.myenv/conf/myahk/myahk_script_move_next_monitor.sh"
#  control+shift+alt+Prior

# m:0x50 is "windows key" detect by "xbindkeys -k"
# seems Super_R/Super_L works the same?
#"/usr/bin/wmctrl -a 'File Manager' || exo-open --launch FileManager"	# version used in LinuxMint 15
"xdg-open ~/amp/download/ && sleep 1 && wmctrl -a download"
  Mod2+Mod4+Super_R+e
"xdg-open ~/amp/download/ && sleep 1 && wmctrl -a download"
  control+shift+alt+e

# Examples
# specify a mouse button
#"xbindkeys_show"
#  control + b:2

###########################
# below are gen by "xbindkeys -d", everything below are commented
###########################
#
# For the benefit of emacs users: -*- shell-script -*-
###########################
# xbindkeys configuration #
###########################
#
# Version: 1.8.5
#
# If you edit this file, do not forget to uncomment any lines
# that you change.
# The pound(#) symbol may be used anywhere for comments.
#
# To specify a key, you can use 'xbindkeys --key' or
# 'xbindkeys --multikey' and put one of the two lines in this file.
#
# The format of a command line is:
#    "command to start"
#       associated key
#
#
# A list of keys is in /usr/include/X11/keysym.h and in
# /usr/include/X11/keysymdef.h
# The XK_ is not needed.
#
# List of modifier:
#   Release, Control, Shift, Mod1 (Alt), Mod2 (NumLock),
#   Mod3 (CapsLock), Mod4, Mod5 (Scroll).
#

# The release modifier is not a standard X modifier, but you can
# use it if you want to catch release events instead of press events

# By defaults, xbindkeys does not pay attention with the modifiers
# NumLock, CapsLock and ScrollLock.
# Uncomment the lines above if you want to pay attention to them.

#keystate_numlock = enable
#keystate_capslock = enable
#keystate_scrolllock= enable

# Examples of commands:
#"xbindkeys_show" 
#  control+shift + q

# set directly keycode (here control + f with my keyboard)
#"xterm"
#  c:41 + m:0x4

# specify a mouse button
#"xterm"
#  control + b:2

#"xterm -geom 50x20+20+20"
#   Shift+Mod2+alt + s
#
## set directly keycode (here control+alt+mod2 + f with my keyboard)
#"xterm"
#  alt + c:0x29 + m:4 + mod2
#
## Control+Shift+a  release event starts rxvt
#"rxvt"
#  release+control+shift + a
#
## Control + mouse button 2 release event starts rxvt
#"rxvt"
#  Control + b:2 + Release

##################################
# End of xbindkeys configuration #
##################################
