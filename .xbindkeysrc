# TODO: seems using '' for command not works, why?

"~/program/vim/bin/gvim --servername SINGLE_VIM --remote-tab ~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt"
  control+alt+c

"~/program/vim/bin/gvim --servername SINGLE_VIM --remote-tab ~/Documents/DCB/Collection_Note/allFile_All.txt"
  control+alt+a

"~/program/vim/bin/gvim --servername SINGLE_VIM --remote-tab ~/Documents/DCB/Google\ Drive/NOTE/A_A_NOTE_Record.txt"
  control+alt+q

"~/program/vim/bin/gvim --servername SINGLE_VIM --remote-tab ~/Documents/DCB/Google\ Drive/NOTE/A_A_NOTE_Schedule.txt"
  control+alt+z

"/usr/bin/wmctrl -a 'Double Commander' || ~/program/doublecmd/doublecmd"
  control+alt+f

"/usr/bin/wmctrl -a 'Google Chrome' || /usr/bin/google-chrome"
  control+alt+d

"/usr/bin/wmctrl -a '/bin/bash' || /usr/bin/terminator"
  control+alt+x

"~/.myenv/conf/myahk/myahk_script_hotstring.sh"
  control+alt+h

"/usr/bin/wmctrl -a 'w7vm'"
  control+alt+w

# Version 1: Not works:			sh -c "copied=\"$(/usr/bin/xclip -o)\" && echo \"$copied\" >> ~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt && notify-send -t 1000 'Copy to File' \"$copied\" || notify-send -t 1000 -u critical 'Copy to File' 'Copy Failed, pls check'"
# Version 2: Works for multiple line:	sh -c "copied=$(echo '$(/usr/bin/xclip -o)') && /usr/bin/xclip -o >> ~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt && notify-send -t 1000 'Copy to File' \"$(echo '$(/usr/bin/xclip -o)')\" "
# Version 3: Works and simple		sh -c "/usr/bin/xclip -o >> ~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt && notify-send -t 1000 'Copied to A_A_NOTE_Copy.txt'"
# Problem: the notify-send can not show Body when copied multiple lines
# TODO: seems GNOME notifications is better than Ubuntu NotifyOSD notification
#"/usr/bin/xclip -o >> ~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt && notify-send -t 1000 'Copied to A_A_NOTE_Copy.txt' \"$(echo '$(/usr/bin/xclip -o)')\" "
"target=~/Documents/DCB/Record/Z/A_A_NOTE_Copy.txt ; echo >> $target && /usr/bin/xclip -o >> $target && notify-send -t 1000 'Copied to A_A_NOTE_Copy.txt'"
  control+shift+c

"/usr/bin/xfce4-appfinder"
  control+shift+z

"/usr/bin/wmctrl -c :ACTIVE:"
  alt+x

"/usr/bin/wmctrl -c :ACTIVE: -b toggle,maximized_vert,maximized_horz"
  alt+z

"/usr/bin/wmctrl -a SINGLE_VIM"
  alt+a

"wmctrl -k on"
  control+shift+alt+d

"~/.myenv/conf/myahk/myahk_script_move_next_monitor.sh"
  control+shift+alt+Next

"~/.myenv/conf/myahk/myahk_script_move_next_monitor.sh"
  control+shift+alt+Prior

# m:0x50 is "windows key" detect by "xbindkeys -k"
"/usr/bin/wmctrl -a 'File Manager' || exo-open --launch FileManager"
  Mod2+Mod4+Super_L+e
"/usr/bin/wmctrl -a 'File Manager' || exo-open --launch FileManager"
  Mod2+Mod4+Super_R+e
"/usr/bin/wmctrl -a 'File Manager' || exo-open --launch FileManager"
  control+shift+alt+e

# Examples
# specify a mouse button
#"xbindkeys_show"
#  control + b:2

###########################
# below are gen by "xbindkeys -d", everything below are commented
###########################
#
# For the benefit of emacs users: -*- shell-script -*-
###########################
# xbindkeys configuration #
###########################
#
# Version: 1.8.5
#
# If you edit this file, do not forget to uncomment any lines
# that you change.
# The pound(#) symbol may be used anywhere for comments.
#
# To specify a key, you can use 'xbindkeys --key' or
# 'xbindkeys --multikey' and put one of the two lines in this file.
#
# The format of a command line is:
#    "command to start"
#       associated key
#
#
# A list of keys is in /usr/include/X11/keysym.h and in
# /usr/include/X11/keysymdef.h
# The XK_ is not needed.
#
# List of modifier:
#   Release, Control, Shift, Mod1 (Alt), Mod2 (NumLock),
#   Mod3 (CapsLock), Mod4, Mod5 (Scroll).
#

# The release modifier is not a standard X modifier, but you can
# use it if you want to catch release events instead of press events

# By defaults, xbindkeys does not pay attention with the modifiers
# NumLock, CapsLock and ScrollLock.
# Uncomment the lines above if you want to pay attention to them.

#keystate_numlock = enable
#keystate_capslock = enable
#keystate_scrolllock= enable

# Examples of commands:
#"xbindkeys_show" 
#  control+shift + q

# set directly keycode (here control + f with my keyboard)
#"xterm"
#  c:41 + m:0x4

# specify a mouse button
#"xterm"
#  control + b:2

#"xterm -geom 50x20+20+20"
#   Shift+Mod2+alt + s
#
## set directly keycode (here control+alt+mod2 + f with my keyboard)
#"xterm"
#  alt + c:0x29 + m:4 + mod2
#
## Control+Shift+a  release event starts rxvt
#"rxvt"
#  release+control+shift + a
#
## Control + mouse button 2 release event starts rxvt
#"rxvt"
#  Control + b:2 + Release

##################################
# End of xbindkeys configuration #
##################################
